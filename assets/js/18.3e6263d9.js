(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{397:function(t,s,n){"use strict";n.r(s);var a=n(44),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_26-删除有序数组中的重复项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_26-删除有序数组中的重复项"}},[t._v("#")]),t._v(" 26. 删除有序数组中的重复项")]),t._v(" "),n("h2",{attrs:{id:"question"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#question"}},[t._v("#")]),t._v(" Question")]),t._v(" "),n("p",[t._v("给你一个有序数组 "),n("code",[t._v("nums")]),t._v(" ，请你"),n("strong",[n("a",{attrs:{href:"http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95",target:"_blank"}},[t._v(" 原地")])]),t._v(" 删除重复出现的元素，使每个元素 "),n("strong",[t._v("只出现一次")]),t._v(" ，返回删除后数组的新长度。")]),t._v(" "),n("p",[t._v("不要使用额外的数组空间，你必须在 "),n("strong",[n("a",{attrs:{href:"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95",target:"_blank"}},[t._v("原地 ")]),t._v("修改输入数组 ")]),t._v("并在使用 O(1) 额外空间的条件下完成。")]),t._v(" "),n("p"),t._v(" "),n("p",[n("strong",[t._v("说明:")])]),t._v(" "),n("p",[t._v("为什么返回数值是整数，但输出的答案是数组呢?")]),t._v(" "),n("p",[t._v("请注意，输入数组是以"),n("strong",[t._v("「引用」")]),t._v("方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。")]),t._v(" "),n("p",[t._v("你可以想象内部操作如下:")]),t._v(" "),n("pre",[t._v("// "),n("strong",[t._v("nums")]),t._v(" 是以“引用”方式传递的。也就是说，不对实参做任何拷贝\nint len = removeDuplicates(nums);\n\n// 在函数里修改输入数组对于调用者是可见的。\n// 根据你的函数返回的长度, 它会打印出数组中"),n("strong",[t._v(" 该长度范围内")]),t._v(" 的所有元素。\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}\n")]),t._v(" "),n("p"),t._v(" "),n("p",[n("strong",[t._v("示例 1：")])]),t._v(" "),n("pre",[n("strong",[t._v("输入：")]),t._v("nums = [1,1,2]\n"),n("strong",[t._v("输出：")]),t._v("2, nums = [1,2]\n"),n("strong",[t._v("解释：")]),t._v("函数应该返回新的长度 "),n("strong",[n("code",[t._v("2")])]),t._v(" ，并且原数组 "),n("em",[t._v("nums ")]),t._v("的前两个元素被修改为 "),n("strong",[n("code",[t._v("1")])]),t._v(", "),n("strong",[n("code",[t._v("2 ")])]),n("code",[t._v("。")]),t._v("不需要考虑数组中超出新长度后面的元素。\n")]),t._v(" "),n("p",[n("strong",[t._v("示例 2：")])]),t._v(" "),n("pre",[n("strong",[t._v("输入：")]),t._v("nums = [0,0,1,1,1,2,2,3,3,4]\n"),n("strong",[t._v("输出：")]),t._v("5, nums = [0,1,2,3,4]\n"),n("strong",[t._v("解释：")]),t._v("函数应该返回新的长度 "),n("strong",[n("code",[t._v("5")])]),t._v(" ， 并且原数组 "),n("em",[t._v("nums ")]),t._v("的前五个元素被修改为 "),n("strong",[n("code",[t._v("0")])]),t._v(", "),n("strong",[n("code",[t._v("1")])]),t._v(", "),n("strong",[n("code",[t._v("2")])]),t._v(", "),n("strong",[n("code",[t._v("3")])]),t._v(", "),n("strong",[n("code",[t._v("4")])]),t._v(" 。不需要考虑数组中超出新长度后面的元素。\n")]),t._v(" "),n("p"),t._v(" "),n("p",[n("strong",[t._v("提示：")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("0 <= nums.length <= 3 * 10"),n("sup",[t._v("4")])])]),t._v(" "),n("li",[n("code",[t._v("-10"),n("sup",[t._v("4")]),t._v(" <= nums[i] <= 10"),n("sup",[t._v("4")])])]),t._v(" "),n("li",[n("code",[t._v("nums")]),t._v(" 已按升序排列")])]),t._v(" "),n("p"),t._v(" "),n("h2",{attrs:{id:"answer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#answer"}},[t._v("#")]),t._v(" Answer")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {number[]} nums\n * @return {number}\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("removeDuplicates")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nums")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);